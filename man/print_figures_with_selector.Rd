% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tools.R
\name{print_figures_with_selector}
\alias{print_figures_with_selector}
\title{Print figures with dropdown selector}
\usage{
print_figures_with_selector(
  plot_func,
  selector,
  id_prefix,
  imglist_class = paste0(id_prefix, "_list"),
  hide_single_selector = TRUE,
  zoom = TRUE,
  zoom_slider = FALSE,
  ...
)
}
\arguments{
\item{plot_func}{A function to produce a plot using a single input from the
\code{selector} input.}

\item{selector}{A named list of character vectors, that will be used to
generate the input to \code{plot_func} to make plots. Plots will be made for
every combination of values in the input. The number of character vectors
should equal the number of arguments taken by \code{plot_func}.}

\item{id_prefix}{The prefix added to element IDs to distinguish this plot
from others. This must be unique amoung other calls to this functions in a
single HTML file.}

\item{imglist_class}{The CSS class used as the prefix for the IDs of the
selector dropdown HTML elements. This must be unique amoung other calls to
this functions in a single HTML file.}

\item{hide_single_selector}{If \code{TRUE}, don't show selector dropdown if it
contains only one choice.}

\item{zoom}{If \code{TRUE}, add JS code to allow the image to be zoomed.}

\item{zoom_slider}{If \code{TRUE}, add a slider to the plot to control the zoom.}

\item{...}{Passed to \code{\link[grDevices:png]{grDevices::png()}}}
}
\description{
Prints HTML code to show a plot based on the value in a dropdown selector.
For use with Quarto/Rmarkdown/Knitr, put in a chunk with the option
\code{results='asis'}.
}
\examples{
n <- c(10, 100, 1000)
base_plot_func <- function(x) {
  hist(rnorm(x))
}
print_figures_with_selector(base_plot_func, list(Count = n), 'base_test_id')

ggplot_func <- function(x) {
  df <- data.frame(
    sex=factor(rep(c("F", "M"), each=x)),
    weight=round(c(rnorm(x, mean=55, sd=5), rnorm(x, mean=65, sd=5)))
  )
  print(ggplot(df, aes(x=weight)) + geom_histogram())
}
print_figures_with_selector(ggplot_func, list(Number = n), 'ggplot_test_id')
}
